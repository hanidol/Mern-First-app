{"ast":null,"code":"import _asyncToGenerator from \"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport api from '../utils/api';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from './types';\n\n// Get Posts\nexport var getPosts = function getPosts() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get('/posts');\n            case 3:\n              res = _context.sent;\n              dispatch({\n                type: GET_POSTS,\n                payload: res.data\n              });\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context.t0.response.statusText,\n                  status: _context.t0.response.status\n                }\n              });\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\n// Add Like\nexport var addLike = function addLike(id) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return api.put(\"/posts/like/\".concat(id));\n            case 3:\n              res = _context2.sent;\n              dispatch({\n                type: UPDATE_LIKES,\n                payload: {\n                  id: id,\n                  likes: res.data\n                }\n              });\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context2.t0.response.statusText,\n                  status: _context2.t0.response.status\n                }\n              });\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\n// Remove Like\nexport var removeLike = function removeLike(id) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return api.put(\"/posts/unlike/\".concat(id));\n            case 3:\n              res = _context3.sent;\n              dispatch({\n                type: UPDATE_LIKES,\n                payload: {\n                  id: id,\n                  likes: res.data\n                }\n              });\n              _context3.next = 10;\n              break;\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context3.t0.response.statusText,\n                  status: _context3.t0.response.status\n                }\n              });\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n\n// Delete Post\nexport var deletePost = function deletePost(id) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch) {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return api.delete(\"/posts/\".concat(id));\n            case 3:\n              dispatch({\n                type: DELETE_POST,\n                payload: id\n              });\n              dispatch(setAlert('Post Removed', 'success'));\n              _context4.next = 10;\n              break;\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context4.t0.response.statusText,\n                  status: _context4.t0.response.status\n                }\n              });\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\n\n// Add Post\nexport var addPost = function addPost(formData) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return api.post('/posts', formData);\n            case 3:\n              res = _context5.sent;\n              dispatch({\n                type: ADD_POST,\n                payload: res.data\n              });\n              dispatch(setAlert('Post Created', 'success'));\n              _context5.next = 11;\n              break;\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context5.t0.response.statusText,\n                  status: _context5.t0.response.status\n                }\n              });\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 8]]);\n    }));\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\n\n// Get Post\nexport var getPost = function getPost(id) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(dispatch) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return api.get(\"/posts/\".concat(id));\n            case 3:\n              res = _context6.sent;\n              dispatch({\n                type: GET_POST,\n                payload: res.data\n              });\n              _context6.next = 10;\n              break;\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context6.t0.response.statusText,\n                  status: _context6.t0.response.status\n                }\n              });\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 7]]);\n    }));\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\n\n// Add Comment\nexport var addComment = function addComment(postId, formData) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(dispatch) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return api.post(\"/posts/comment/\".concat(postId), formData);\n            case 3:\n              res = _context7.sent;\n              dispatch({\n                type: ADD_COMMENT,\n                payload: res.data\n              });\n              dispatch(setAlert('Comment Added', 'success'));\n              _context7.next = 11;\n              break;\n            case 8:\n              _context7.prev = 8;\n              _context7.t0 = _context7[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context7.t0.response.statusText,\n                  status: _context7.t0.response.status\n                }\n              });\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 8]]);\n    }));\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};\n\n// Delete Comment\nexport var deleteComment = function deleteComment(postId, commentId) {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(dispatch) {\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return api.delete(\"/posts/comment/\".concat(postId, \"/\").concat(commentId));\n            case 3:\n              dispatch({\n                type: REMOVE_COMMENT,\n                payload: commentId\n              });\n              dispatch(setAlert('Comment Removed', 'success'));\n              _context8.next = 10;\n              break;\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context8.t0.response.statusText,\n                  status: _context8.t0.response.status\n                }\n              });\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 7]]);\n    }));\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["api","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","get","res","type","payload","data","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","post","getPost","addComment","postId","deleteComment","commentId"],"sources":["/Users/haninasri/Desktop/FulStuck/First-App/client/src/actions/post.js"],"sourcesContent":["import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from './types';\n\n// Get Posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await api.get('/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await api.put(`/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Remove Like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await api.put(`/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete Post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.delete(`/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Post\nexport const addPost = (formData) => async (dispatch) => {\n  try {\n    const res = await api.post('/posts', formData);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Get Post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await api.get(`/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  try {\n    const res = await api.post(`/posts/comment/${postId}`, formData);\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    await api.delete(`/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}