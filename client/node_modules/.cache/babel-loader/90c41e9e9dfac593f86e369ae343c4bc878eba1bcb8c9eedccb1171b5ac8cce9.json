{"ast":null,"code":"import Axios from \"axios\";\nimport { GET_PATIENTS_SUCCESS, GET_PATIENTS_ERROR } from \"./actionTypes\";\nexport const getPatients = () => {\n  return async dispatch => {\n    try {\n      const result = await Axios.get(\"/api/patients\");\n      dispatch({\n        type: GET_PATIENTS_SUCCESS,\n        payload: result.data.patients\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PATIENTS_ERROR,\n        error\n      });\n    }\n  };\n};\nexport const addPatient = patient => {\n  const contentType = {\n    headers: {\n      \"content-type\": \"multipart/form-data\"\n    }\n  };\n  let formData = new FormData();\n  formData.append(\"name\", patient.name);\n  formData.append(\"numberphone\", patient.numberphone);\n  formData.append(\"genre\", patient.genre);\n  formData.append(\"image\", patient.image);\n  formData.append(\"mail\", patient.mail);\n  return async dispatch => {\n    try {\n      const result = await Axios.post(\"/api/patients/addpatient\", formData, contentType);\n      dispatch({\n        type: GET_PATIENTS_SUCCESS,\n        payload: result.data.patients\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PATIENTS_ERROR,\n        error\n      });\n    }\n  };\n};","map":{"version":3,"names":["Axios","GET_PATIENTS_SUCCESS","GET_PATIENTS_ERROR","getPatients","dispatch","result","get","type","payload","data","patients","error","addPatient","patient","contentType","headers","formData","FormData","append","name","numberphone","genre","image","mail","post"],"sources":["/Users/haninasri/Desktop/FulStuck/First-App/client/src/actions/patientsAction.js"],"sourcesContent":["import Axios from \"axios\";\nimport { GET_PATIENTS_SUCCESS, GET_PATIENTS_ERROR } from \"./actionTypes\";\n\nexport const getPatients = () => {\n  return async (dispatch) => {\n    try {\n      const result = await Axios.get(\"/api/patients\");\n      dispatch({ type: GET_PATIENTS_SUCCESS, payload: result.data.patients });\n    } catch (error) {\n      dispatch({ type: GET_PATIENTS_ERROR, error });\n    }\n  };\n};\n\nexport const addPatient = (patient) => {\n  const contentType = {\n    headers: {\n      \"content-type\": \"multipart/form-data\",\n    },\n  };\n  let formData = new FormData();\n  formData.append(\"name\", patient.name);\n  formData.append(\"numberphone\", patient.numberphone);\n  formData.append(\"genre\", patient.genre);\n  formData.append(\"image\", patient.image);\n  formData.append(\"mail\", patient.mail);\n\n  return async (dispatch) => {\n    try {\n      const result = await Axios.post(\n        \"/api/patients/addpatient\",\n        formData,\n        contentType\n      );\n      dispatch({ type: GET_PATIENTS_SUCCESS, payload: result.data.patients });\n    } catch (error) {\n      dispatch({ type: GET_PATIENTS_ERROR, error });\n    }\n  };\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,eAAe;AAExE,OAAO,MAAMC,WAAW,GAAG,MAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,eAAe,CAAC;MAC/CF,QAAQ,CAAC;QAAEG,IAAI,EAAEN,oBAAoB;QAAEO,OAAO,EAAEH,MAAM,CAACI,IAAI,CAACC;MAAS,CAAC,CAAC;IACzE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,QAAQ,CAAC;QAAEG,IAAI,EAAEL,kBAAkB;QAAES;MAAM,CAAC,CAAC;IAC/C;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAK;EACrC,MAAMC,WAAW,GAAG;IAClBC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EACD,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,OAAO,CAACM,IAAI,CAAC;EACrCH,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEL,OAAO,CAACO,WAAW,CAAC;EACnDJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,OAAO,CAACQ,KAAK,CAAC;EACvCL,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,OAAO,CAACS,KAAK,CAAC;EACvCN,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,OAAO,CAACU,IAAI,CAAC;EAErC,OAAO,MAAOnB,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAML,KAAK,CAACwB,IAAI,CAC7B,0BAA0B,EAC1BR,QAAQ,EACRF,WAAW,CACZ;MACDV,QAAQ,CAAC;QAAEG,IAAI,EAAEN,oBAAoB;QAAEO,OAAO,EAAEH,MAAM,CAACI,IAAI,CAACC;MAAS,CAAC,CAAC;IACzE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,QAAQ,CAAC;QAAEG,IAAI,EAAEL,kBAAkB;QAAES;MAAM,CAAC,CAAC;IAC/C;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}