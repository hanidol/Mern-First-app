{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from \"../actions/actionTypes\";\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nconst postReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n    case CREATE:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === payload.id ? {\n          ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(comment => comment._id !== payload)\n        },\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\nexport default postReducer;","map":{"version":3,"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","initialState","posts","post","loading","error","postReducer","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"sources":["/Users/haninasri/Desktop/FulStuck/First-App/client/src/reducers/post.js"],"sourcesContent":["import {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT,\n  } from '../actions/types';\n  import {\n    FETCH_ALL,\n    CREATE,\n    UPDATE,\n    DELETE,\n    LIKE,\n  } from \"../actions/actionTypes\";\n  \n  const initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {},\n  };\n  \n  const postReducer = (state = initialState, action) => {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case GET_POSTS:\n        return {\n          ...state,\n          posts: payload,\n          loading: false,\n        };\n      case GET_POST:\n        return {\n          ...state,\n          post: payload,\n          loading: false,\n        };\n      case ADD_POST:\n        return {\n          ...state,\n          posts: [payload, ...state.posts],\n          loading: false,\n        };\n      case FETCH_ALL:\n        return { \n          ...state,\n          posts: [payload, ...state.posts],\n          loading: false,\n        }\n        case CREATE:\n          return { \n            ...state,\n            posts: [payload, ...state.posts],\n            loading: false,}\n      case DELETE_POST:\n        return {\n          ...state,\n          posts: state.posts.filter((post) => post._id !== payload),\n          loading: false,\n        };\n      case POST_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false,\n        };\n      case UPDATE_LIKES:\n        return {\n          ...state,\n          posts: state.posts.map((post) =>\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\n          ),\n          loading: false,\n        };\n      case ADD_COMMENT:\n        return {\n          ...state,\n          post: { ...state.post, comments: payload },\n          loading: false,\n        };\n      case REMOVE_COMMENT:\n        return {\n          ...state,\n          post: {\n            ...state.post,\n            comments: state.post.comments.filter(\n              (comment) => comment._id !== payload\n            ),\n          },\n          loading: false,\n        };\n      default:\n        return state;\n        \n    }\n  };\n  \n  export default postReducer;\n  "],"mappings":"AAAA,SACIA,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,WAAW,EACXC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,cAAc,QACT,kBAAkB;AACzB,SACEC,SAAS,EACTC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,IAAI,QACC,wBAAwB;AAE/B,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAC/C,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKrB,SAAS;MACZ,OAAO;QACL,GAAGmB,KAAK;QACRL,KAAK,EAAEQ,OAAO;QACdN,OAAO,EAAE;MACX,CAAC;IACH,KAAKX,QAAQ;MACX,OAAO;QACL,GAAGc,KAAK;QACRJ,IAAI,EAAEO,OAAO;QACbN,OAAO,EAAE;MACX,CAAC;IACH,KAAKZ,QAAQ;MACX,OAAO;QACL,GAAGe,KAAK;QACRL,KAAK,EAAE,CAACQ,OAAO,EAAE,GAAGH,KAAK,CAACL,KAAK,CAAC;QAChCE,OAAO,EAAE;MACX,CAAC;IACH,KAAKR,SAAS;MACZ,OAAO;QACL,GAAGW,KAAK;QACRL,KAAK,EAAE,CAACQ,OAAO,EAAE,GAAGH,KAAK,CAACL,KAAK,CAAC;QAChCE,OAAO,EAAE;MACX,CAAC;IACD,KAAKP,MAAM;MACT,OAAO;QACL,GAAGU,KAAK;QACRL,KAAK,EAAE,CAACQ,OAAO,EAAE,GAAGH,KAAK,CAACL,KAAK,CAAC;QAChCE,OAAO,EAAE;MAAM,CAAC;IACtB,KAAKb,WAAW;MACd,OAAO;QACL,GAAGgB,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACS,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACS,GAAG,KAAKF,OAAO,CAAC;QACzDN,OAAO,EAAE;MACX,CAAC;IACH,KAAKf,UAAU;MACb,OAAO;QACL,GAAGkB,KAAK;QACRF,KAAK,EAAEK,OAAO;QACdN,OAAO,EAAE;MACX,CAAC;IACH,KAAKd,YAAY;MACf,OAAO;QACL,GAAGiB,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACW,GAAG,CAAEV,IAAI,IAC1BA,IAAI,CAACS,GAAG,KAAKF,OAAO,CAACI,EAAE,GAAG;UAAE,GAAGX,IAAI;UAAEY,KAAK,EAAEL,OAAO,CAACK;QAAM,CAAC,GAAGZ,IAAI,CACnE;QACDC,OAAO,EAAE;MACX,CAAC;IACH,KAAKV,WAAW;MACd,OAAO;QACL,GAAGa,KAAK;QACRJ,IAAI,EAAE;UAAE,GAAGI,KAAK,CAACJ,IAAI;UAAEa,QAAQ,EAAEN;QAAQ,CAAC;QAC1CN,OAAO,EAAE;MACX,CAAC;IACH,KAAKT,cAAc;MACjB,OAAO;QACL,GAAGY,KAAK;QACRJ,IAAI,EAAE;UACJ,GAAGI,KAAK,CAACJ,IAAI;UACba,QAAQ,EAAET,KAAK,CAACJ,IAAI,CAACa,QAAQ,CAACL,MAAM,CACjCM,OAAO,IAAKA,OAAO,CAACL,GAAG,KAAKF,OAAO;QAExC,CAAC;QACDN,OAAO,EAAE;MACX,CAAC;IACH;MACE,OAAOG,KAAK;EAAC;AAGnB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}