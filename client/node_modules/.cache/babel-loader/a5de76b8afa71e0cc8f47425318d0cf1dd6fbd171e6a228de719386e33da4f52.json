{"ast":null,"code":"import { GET_ZHEIMER_ERROR, GET_ZHEIMER_SUCCESS } from \"../actions/actionTypes\";\nconst initialState = {\n  zheimers: [],\n  newzheimer: {},\n  error: null\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_ZHEIMER_SUCCESS:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case GET_ZHEIMER_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_ZHEIMER_ERROR","GET_ZHEIMER_SUCCESS","initialState","zheimers","newzheimer","error","state","action","type","genres","payload"],"sources":["/Users/haninasri/Desktop/FulStuck/First-App/client/src/reducers/zheimerReducer.js"],"sourcesContent":["import { GET_ZHEIMER_ERROR, GET_ZHEIMER_SUCCESS } from \"../actions/actionTypes\";\n\nconst initialState = {\n  zheimers: [],\n  newzheimer: {},\n  error: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ZHEIMER_SUCCESS:\n      return {\n        ...state,\n        genres: action.payload,\n      };\n\n    case GET_ZHEIMER_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,mBAAmB,QAAQ,wBAAwB;AAE/E,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAK,EAAE;AACT,CAAC;AAED,eAAe,YAAwC;EAAA,IAA9BC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EACnD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,mBAAmB;MACtB,OAAO;QACL,GAAGK,KAAK;QACRG,MAAM,EAAEF,MAAM,CAACG;MACjB,CAAC;IAEH,KAAKV,iBAAiB;MACpB,OAAO;QACL,GAAGM,KAAK;QACRD,KAAK,EAAEE,MAAM,CAACF;MAChB,CAAC;IAEH;MACE,OAAOC,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}