{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT, UPDATE, LIKEPAPER, DELETEPAPER, FETCH_ALL } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nconst postReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n      switch (type) {\n        case FETCH_ALL:\n          return {\n            ...state,\n            posts: payload,\n            loading: false\n          };\n        case GET_POST:\n          return {\n            ...state,\n            post: payload,\n            loading: false\n          };\n        case ADD_POST:\n          return {\n            ...state,\n            posts: [payload, ...state.posts],\n            loading: false\n          };\n        case UPDATE:\n          return {\n            ...state,\n            posts: [payload, ...state.posts],\n            loading: false\n          };\n        case DELETE_POST:\n          return {\n            ...state,\n            posts: state.posts.filter(post => post._id !== payload),\n            loading: false\n          };\n        case POST_ERROR:\n          return {\n            ...state,\n            error: payload,\n            loading: false\n          };\n        case DELETEPAPER:\n          return {\n            ...state,\n            posts: state.posts.filter(post => post._id !== payload),\n            loading: false\n          };\n        case POST_ERROR:\n          return {\n            ...state,\n            error: payload,\n            loading: false\n          };\n        case UPDATE_LIKES:\n          return {\n            ...state,\n            posts: state.posts.map(post => post._id === payload.id ? {\n              ...post,\n              likes: payload.likes\n            } : post),\n            loading: false\n          };\n        case LIKEPAPER:\n          return {\n            ...state,\n            posts: state.posts.map(post => post._id === payload.id ? {\n              ...post,\n              likes: payload.likes\n            } : post),\n            loading: false\n          };\n        case ADD_COMMENT:\n          return {\n            ...state,\n            post: {\n              ...state.post,\n              comments: payload\n            },\n            loading: false\n          };\n        case REMOVE_COMMENT:\n          return {\n            ...state,\n            post: {\n              ...state.post,\n              comments: state.post.comments.filter(comment => comment._id !== payload)\n            },\n            loading: false\n          };\n        default:\n          return state;\n      }\n  }\n};\nexport default postReducer;","map":{"version":3,"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","UPDATE","LIKEPAPER","DELETEPAPER","FETCH_ALL","initialState","posts","post","loading","error","postReducer","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"sources":["/Users/haninasri/Desktop/FulStuck/First-App/client/src/reducers/post.js"],"sourcesContent":["import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  UPDATE,\n  LIKEPAPER,\n  DELETEPAPER,\n  FETCH_ALL,\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nconst postReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n      switch (type) {\n        case FETCH_ALL:\n          return {\n            ...state,\n            posts: payload,\n            loading: false,\n          };\n        case GET_POST:\n          return {\n            ...state,\n            post: payload,\n            loading: false,\n          };\n        case ADD_POST:\n          return {\n            ...state,\n            posts: [payload, ...state.posts],\n            loading: false,\n          };\n        case UPDATE:\n          return {\n            ...state,\n            posts: [payload, ...state.posts],\n            loading: false,\n          };\n\n        case DELETE_POST:\n          return {\n            ...state,\n            posts: state.posts.filter((post) => post._id !== payload),\n            loading: false,\n          };\n        case POST_ERROR:\n          return {\n            ...state,\n            error: payload,\n            loading: false,\n          };\n        case DELETEPAPER:\n          return {\n            ...state,\n            posts: state.posts.filter((post) => post._id !== payload),\n            loading: false,\n          };\n        case POST_ERROR:\n          return {\n            ...state,\n            error: payload,\n            loading: false,\n          };\n\n        case UPDATE_LIKES:\n          return {\n            ...state,\n            posts: state.posts.map((post) =>\n              post._id === payload.id ? { ...post, likes: payload.likes } : post\n            ),\n            loading: false,\n          };\n        case LIKEPAPER:\n          return {\n            ...state,\n            posts: state.posts.map((post) =>\n              post._id === payload.id ? { ...post, likes: payload.likes } : post\n            ),\n            loading: false,\n          };\n\n        case ADD_COMMENT:\n          return {\n            ...state,\n            post: { ...state.post, comments: payload },\n            loading: false,\n          };\n        case REMOVE_COMMENT:\n          return {\n            ...state,\n            post: {\n              ...state.post,\n              comments: state.post.comments.filter(\n                (comment) => comment._id !== payload\n              ),\n            },\n            loading: false,\n          };\n        default:\n          return state;\n      }\n  }\n};\nexport default postReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}