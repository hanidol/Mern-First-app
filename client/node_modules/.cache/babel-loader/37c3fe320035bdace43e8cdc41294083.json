{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _classCallCheck = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\nvar _getPrototypeOf = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar Hoek = require('@hapi/hoek');\nvar Any = require('../any');\nvar internals = {\n  Set: require('../../set')\n};\ninternals.Boolean = /*#__PURE__*/function (_Any) {\n  _inherits(_class, _Any);\n  function _class() {\n    var _this;\n    _classCallCheck(this, _class);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this));\n    _this._type = 'boolean';\n    _this._flags.insensitive = true;\n    _this._inner.truthySet = new internals.Set();\n    _this._inner.falsySet = new internals.Set();\n    return _this;\n  }\n  _createClass(_class, [{\n    key: \"_base\",\n    value: function _base(value, state, options) {\n      var result = {\n        value: value\n      };\n      if (typeof value === 'string' && options.convert) {\n        var normalized = this._flags.insensitive ? value.toLowerCase() : value;\n        result.value = normalized === 'true' ? true : normalized === 'false' ? false : value;\n      }\n      if (typeof result.value !== 'boolean') {\n        result.value = this._inner.truthySet.has(value, null, null, this._flags.insensitive) ? true : this._inner.falsySet.has(value, null, null, this._flags.insensitive) ? false : value;\n      }\n      result.errors = typeof result.value === 'boolean' ? null : this.createError('boolean.base', {\n        value: value\n      }, state, options);\n      return result;\n    }\n  }, {\n    key: \"truthy\",\n    value: function truthy() {\n      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n        values[_key] = arguments[_key];\n      }\n      var obj = this.clone();\n      values = Hoek.flatten(values);\n      for (var i = 0; i < values.length; ++i) {\n        var value = values[i];\n        Hoek.assert(value !== undefined, 'Cannot call truthy with undefined');\n        obj._inner.truthySet.add(value);\n      }\n      return obj;\n    }\n  }, {\n    key: \"falsy\",\n    value: function falsy() {\n      for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        values[_key2] = arguments[_key2];\n      }\n      var obj = this.clone();\n      values = Hoek.flatten(values);\n      for (var i = 0; i < values.length; ++i) {\n        var value = values[i];\n        Hoek.assert(value !== undefined, 'Cannot call falsy with undefined');\n        obj._inner.falsySet.add(value);\n      }\n      return obj;\n    }\n  }, {\n    key: \"insensitive\",\n    value: function insensitive(enabled) {\n      var insensitive = enabled === undefined ? true : !!enabled;\n      if (this._flags.insensitive === insensitive) {\n        return this;\n      }\n      var obj = this.clone();\n      obj._flags.insensitive = insensitive;\n      return obj;\n    }\n  }, {\n    key: \"describe\",\n    value: function describe() {\n      var description = _get(_getPrototypeOf(_class.prototype), \"describe\", this).call(this);\n      description.truthy = [true].concat(_toConsumableArray(this._inner.truthySet.values()));\n      description.falsy = [false].concat(_toConsumableArray(this._inner.falsySet.values()));\n      return description;\n    }\n  }]);\n  return _class;\n}(Any);\nmodule.exports = new internals.Boolean();","map":null,"metadata":{},"sourceType":"script"}