{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/haninasri/Desktop/FulStuck/First-App/client/src/components/routing/PrivateRoute.js\";\nimport { Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n    _ref$auth = _ref.auth,\n    isAuthenticated = _ref$auth.isAuthenticated,\n    loading = _ref$auth.loading;\n  /*#__PURE__*/React.createElement(React.Fragment, null, \"if (loading) return \", /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 23\n    }\n  }), \"; if (isAuthenticated) return \", /*#__PURE__*/React.createElement(Component, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 31\n    }\n  }), \"; return \", /*#__PURE__*/React.createElement(Navigate, {\n    to: \"/login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }), \";\");\n};\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"names":["Navigate","PropTypes","connect","Spinner","PrivateRoute","Component","component","auth","isAuthenticated","loading","propTypes","object","isRequired","mapStateToProps","state"],"sources":["/Users/haninasri/Desktop/FulStuck/First-App/client/src/components/routing/PrivateRoute.js"],"sourcesContent":["import { Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Spinner from '../layout/Spinner';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n}) => {\n  <>\n  if (loading) return <Spinner />;\n  if (isAuthenticated) return <Component />;\n  return <Navigate to='/login' />;\n  </>\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAOC,OAAO,MAAM,mBAAmB;AAEvC,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAGZ;EAAA,IAFOC,SAAS,QAApBC,SAAS;IAAA,iBACTC,IAAI;IAAIC,eAAe,aAAfA,eAAe;IAAEC,OAAO,aAAPA,OAAO;EAEhC,4FACoB,oBAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,iDACH,oBAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,4BAClC,oBAAC,QAAQ;IAAC,EAAE,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,MAC5B;AACL,CAAC;AAEDL,YAAY,CAACM,SAAS,GAAG;EACvBH,IAAI,EAAEN,SAAS,CAACU,MAAM,CAACC;AACzB,CAAC;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,KAAK;EAAA,OAAM;IAClCP,IAAI,EAAEO,KAAK,CAACP;EACd,CAAC;AAAA,CAAC;AAEF,eAAeL,OAAO,CAACW,eAAe,CAAC,CAACT,YAAY,CAAC"},"metadata":{},"sourceType":"module"}