{"ast":null,"code":"import{useEffect}from\"react\";import{BrowserRouter,Routes,Route}from\"react-router-dom\";import React from\"react\";import Navbar from\"./components/layout/Navbar\";import Footer from\"./components/layout/Footer\";import Landing from\"./components/layout/Landing\";import Login from\"./components/auth/Login\";import Register from\"./components/auth/Register\";import Alert from\"./components/layout/Alert\";import Dashboard from\"./components/dashboard/Dashboard\";import ProfileForm from\"./components/profile-form/ProfileForm\";import AddExperience from\"./components/profile-form/AddExperience\";import AddPatient from\"./components/profile-form/AddPatient\";import Profiles from\"./components/profiles/Profiles\";import Profile from\"./components/profile/Profile\";import Posts from\"./components/posts/Posts\";import Post from\"./components/post/Post\";import NotFound from\"./components/layout/NotFound\";import PrivateRoute from\"./components/routing/PrivateRoute\";// Redux\nimport{Provider}from\"react-redux\";import{store}from\"./store\";import{loadUser}from\"./actions/auth\";import{LOGOUT}from\"./actions/types\";import setAuthToken from\"./utils/setAuthToken\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){useEffect(function(){// check for token in LS when app first runs\nif(localStorage.token){// if there is a token set axios headers for all requests\nsetAuthToken(localStorage.token);}// try to fetch a user, if no token or invalid token we\n// will get a 401 response from our API\nstore.dispatch(loadUser());// log user out from all tabs if they log out in one tab\nwindow.addEventListener(\"storage\",function(){if(!localStorage.token)store.dispatch({type:LOGOUT});});},[]);return/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Alert,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Landing,{})}),/*#__PURE__*/_jsx(Route,{path:\"register\",element:/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"profiles\",element:/*#__PURE__*/_jsx(Profiles,{})}),/*#__PURE__*/_jsx(Route,{path:\"profile/:id\",element:/*#__PURE__*/_jsx(Profile,{})}),/*#__PURE__*/_jsx(Route,{path:\"dashboard\",element:/*#__PURE__*/_jsx(PrivateRoute,{component:Dashboard})}),/*#__PURE__*/_jsx(Route,{path:\"create-profile\",element:/*#__PURE__*/_jsx(PrivateRoute,{component:ProfileForm})}),/*#__PURE__*/_jsx(Route,{path:\"edit-profile\",element:/*#__PURE__*/_jsx(PrivateRoute,{component:ProfileForm})}),/*#__PURE__*/_jsx(Route,{path:\"add-experience\",element:/*#__PURE__*/_jsx(PrivateRoute,{component:AddExperience})}),/*#__PURE__*/_jsx(Route,{path:\"add-patient\",element:/*#__PURE__*/_jsx(PrivateRoute,{component:AddPatient})}),/*#__PURE__*/_jsx(Route,{path:\"posts\",element:/*#__PURE__*/_jsx(PrivateRoute,{component:Posts})}),/*#__PURE__*/_jsx(Route,{path:\"posts/:id\",element:/*#__PURE__*/_jsx(PrivateRoute,{component:Post})}),/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(NotFound,{})})]}),/*#__PURE__*/_jsx(Footer,{})]})});};export default App;","map":{"version":3,"names":["useEffect","BrowserRouter","Routes","Route","React","Navbar","Footer","Landing","Login","Register","Alert","Dashboard","ProfileForm","AddExperience","AddPatient","Profiles","Profile","Posts","Post","NotFound","PrivateRoute","Provider","store","loadUser","LOGOUT","setAuthToken","App","localStorage","token","dispatch","window","addEventListener","type"],"sources":["/Users/haninasri/Desktop/FulStuck/First-App/app/client/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nimport Navbar from \"./components/layout/Navbar\";\n\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Alert from \"./components/layout/Alert\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProfileForm from \"./components/profile-form/ProfileForm\";\nimport AddExperience from \"./components/profile-form/AddExperience\";\nimport AddPatient from \"./components/profile-form/AddPatient\";\nimport Profiles from \"./components/profiles/Profiles\";\nimport Profile from \"./components/profile/Profile\";\nimport Posts from \"./components/posts/Posts\";\nimport Post from \"./components/post/Post\";\nimport NotFound from \"./components/layout/NotFound\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport { LOGOUT } from \"./actions/types\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  useEffect(() => {\n    // check for token in LS when app first runs\n    if (localStorage.token) {\n      // if there is a token set axios headers for all requests\n      setAuthToken(localStorage.token);\n    }\n    // try to fetch a user, if no token or invalid token we\n    // will get a 401 response from our API\n    store.dispatch(loadUser());\n\n    // log user out from all tabs if they log out in one tab\n    window.addEventListener(\"storage\", () => {\n      if (!localStorage.token) store.dispatch({ type: LOGOUT });\n    });\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Navbar />\n\n        <Alert />\n\n        <Routes>\n          <Route path=\"/\" element={<Landing />} />\n          <Route path=\"register\" element={<Register />} />\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"profiles\" element={<Profiles />} />\n          <Route path=\"profile/:id\" element={<Profile />} />\n          <Route\n            path=\"dashboard\"\n            element={<PrivateRoute component={Dashboard} />}\n          />\n          <Route\n            path=\"create-profile\"\n            element={<PrivateRoute component={ProfileForm} />}\n          />\n          <Route\n            path=\"edit-profile\"\n            element={<PrivateRoute component={ProfileForm} />}\n          />\n          <Route\n            path=\"add-experience\"\n            element={<PrivateRoute component={AddExperience} />}\n          />\n          <Route\n            path=\"add-patient\"\n            element={<PrivateRoute component={AddPatient} />}\n          />\n\n          <Route path=\"posts\" element={<PrivateRoute component={Posts} />} />\n\n          <Route path=\"posts/:id\" element={<PrivateRoute component={Post} />} />\n          <Route path=\"/*\" element={<NotFound />} />\n        </Routes>\n        <Footer />\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}