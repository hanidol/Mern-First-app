{"ast":null,"code":"import api from \"../utils/api\";\nimport { setAlert } from \"./alert\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT, UPDATE, LIKEPAPER, DELETEPAPER, FETCH_ALL } from \"./types\";\n\n// Get Posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await api.get(\"/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getPostsPaper = () => async dispatch => {\n  try {\n    const res = await api.get(\"/postspatiens\");\n    dispatch({\n      type: FETCH_ALL,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add Like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await api.put(`/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const likePostPaper = id => async dispatch => {\n  try {\n    const res = await api.put(`/postspatiens/like/${id}`);\n    dispatch({\n      type: LIKEPAPER,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Remove Like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await api.put(`/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete Post\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.delete(`/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add Post\nexport const addPost = formData => async dispatch => {\n  try {\n    const res = await api.post(\"/posts\", formData);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get Post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await api.get(`/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add Comment\nexport const addComment = (postId, formData) => async dispatch => {\n  try {\n    const res = await api.post(`/posts/comment/${postId}`, formData);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await api.delete(`/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["api","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","UPDATE","LIKEPAPER","DELETEPAPER","FETCH_ALL","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getPostsPaper","addLike","id","put","likes","likePostPaper","removeLike","deletePost","delete","addPost","formData","post","getPost","addComment","postId","deleteComment","commentId"],"sources":["/Users/haninasri/Desktop/FulStuck/First-App/client/src/actions/post.js"],"sourcesContent":["import api from \"../utils/api\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  UPDATE,\n  LIKEPAPER,\n  DELETEPAPER,\n  FETCH_ALL,\n} from \"./types\";\n\n// Get Posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await api.get(\"/posts\");\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\nexport const getPostsPaper = () => async (dispatch) => {\n  try {\n    const res = await api.get(\"/postspatiens\");\n\n    dispatch({\n      type: FETCH_ALL,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await api.put(`/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\nexport const likePostPaper = (id) => async (dispatch) => {\n  try {\n    const res = await api.put(`/postspatiens/like/${id}`);\n\n    dispatch({\n      type: LIKEPAPER,\n      payload: {\n        id,\n        likes: res.data,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Remove Like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await api.put(`/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete Post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.delete(`/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Post\nexport const addPost = (formData) => async (dispatch) => {\n  try {\n    const res = await api.post(\"/posts\", formData);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Get Post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await api.get(`/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  try {\n    const res = await api.post(`/posts/comment/${postId}`, formData);\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    await api.delete(`/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}