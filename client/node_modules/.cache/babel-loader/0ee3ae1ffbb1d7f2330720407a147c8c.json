{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _get = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\nvar _classCallCheck = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _wrapNativeSuper = require(\"/Users/haninasri/Desktop/FulStuck/First-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar Util = require('util');\nvar Hoek = require('@hapi/hoek');\nvar Any = require('../any');\nvar internals = {};\ninternals.Map = /*#__PURE__*/function (_Map) {\n  _inherits(_class, _Map);\n  function _class() {\n    _classCallCheck(this, _class);\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n  _createClass(_class, [{\n    key: \"slice\",\n    value: function slice() {\n      return new internals.Map(this);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return Util.inspect(this);\n    }\n  }]);\n  return _class;\n}(_wrapNativeSuper(Map));\ninternals.Symbol = /*#__PURE__*/function (_Any) {\n  _inherits(_class2, _Any);\n  function _class2() {\n    var _this;\n    _classCallCheck(this, _class2);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_class2).call(this));\n    _this._type = 'symbol';\n    _this._inner.map = new internals.Map();\n    return _this;\n  }\n  _createClass(_class2, [{\n    key: \"_base\",\n    value: function _base(value, state, options) {\n      if (options.convert) {\n        var lookup = this._inner.map.get(value);\n        if (lookup) {\n          value = lookup;\n        }\n        if (this._flags.allowOnly) {\n          return {\n            value: value,\n            errors: typeof value === 'symbol' ? null : this.createError('symbol.map', {\n              value: value,\n              map: this._inner.map\n            }, state, options)\n          };\n        }\n      }\n      return {\n        value: value,\n        errors: typeof value === 'symbol' ? null : this.createError('symbol.base', {\n          value: value\n        }, state, options)\n      };\n    }\n  }, {\n    key: \"map\",\n    value: function map(iterable) {\n      if (iterable && !iterable[Symbol.iterator] && typeof iterable === 'object') {\n        iterable = Object.entries(iterable);\n      }\n      Hoek.assert(iterable && iterable[Symbol.iterator], 'Iterable must be an iterable or object');\n      var obj = this.clone();\n      var symbols = [];\n      var _iterator = _createForOfIteratorHelper(iterable),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var entry = _step.value;\n          Hoek.assert(entry && entry[Symbol.iterator], 'Entry must be an iterable');\n          var _entry = _slicedToArray(entry, 2),\n            key = _entry[0],\n            value = _entry[1];\n          Hoek.assert(typeof key !== 'object' && typeof key !== 'function' && typeof key !== 'symbol', 'Key must not be an object, function, or Symbol');\n          Hoek.assert(typeof value === 'symbol', 'Value must be a Symbol');\n          obj._inner.map.set(key, value);\n          symbols.push(value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return obj.valid.apply(obj, symbols);\n    }\n  }, {\n    key: \"describe\",\n    value: function describe() {\n      var description = _get(_getPrototypeOf(_class2.prototype), \"describe\", this).call(this);\n      description.map = new Map(this._inner.map);\n      return description;\n    }\n  }]);\n  return _class2;\n}(Any);\nmodule.exports = new internals.Symbol();","map":null,"metadata":{},"sourceType":"script"}