{"ast":null,"code":"var _jsxFileName = \"/Users/haninasri/Desktop/FulStuck/First-App/client/src/components/posts/PostForm.js\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost, updatePaper } from \"../../actions/post\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = _ref => {\n  _s();\n  let {\n    addPost,\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    name: \"\",\n    mail: \"\",\n    phone: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      name: \"\",\n      mail: \"\",\n      phone: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    addPost({\n      text\n    });\n    setText(\"\");\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (currentId === 0) {\n      dispatch(addPost(postData));\n      clear();\n    } else {\n      dispatch(updatePaper(currentId, postData));\n      clear();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-form-header bg-primary\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Say Something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form my-1\",\n      onSubmit: handleOnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        cols: \"30\",\n        rows: \"5\",\n        placeholder: \"Create a Post\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-dark my-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"U+BCbd2azyYzWDnhdzAjNlSbs/o=\");\n_c = PostForm;\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addPost\n})(PostForm);\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["PropTypes","connect","addPost","updatePaper","React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","PostForm","currentId","setCurrentId","text","setText","postData","setPostData","creator","name","mail","phone","message","tags","selectedFile","clear","handleOnSubmit","e","preventDefault","handleSubmit","dispatch","target","value","propTypes","func","isRequired"],"sources":["/Users/haninasri/Desktop/FulStuck/First-App/client/src/components/posts/PostForm.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost, updatePaper } from \"../../actions/post\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\n\nimport useStyles from \"./styles\";\n\nconst PostForm = ({ addPost, currentId, setCurrentId }) => {\n  const [text, setText] = useState(\"\");\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    name: \"\",\n    mail: \"\",\n    phone: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      name: \"\",\n      mail: \"\",\n      phone: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    addPost({ text });\n    setText(\"\");\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(addPost(postData));\n      clear();\n    } else {\n      dispatch(updatePaper(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <div className=\"post-form\">\n      <div className=\"post-form-header bg-primary\">\n        <h3>Say Something...</h3>\n      </div>\n\n      <form className=\"form my-1\" onSubmit={handleOnSubmit}>\n        <textarea\n          name=\"text\"\n          cols=\"30\"\n          rows=\"5\"\n          placeholder=\"Create a Post\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          required\n        />\n\n        <input type=\"submit\" value=\"Submit\" className=\"btn btn-dark my-1\" />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,EAAEC,WAAW,QAAQ,oBAAoB;AACzD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,QAAQ,mBAAmB;AACxE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,OAAOC,SAAS,MAAM,UAAU;AAAC;AAEjC,MAAMC,QAAQ,GAAG,QAA0C;EAAA;EAAA,IAAzC;IAAEb,OAAO;IAAEc,SAAS;IAAEC;EAAa,CAAC;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,MAAMC,KAAK,GAAG,MAAM;IAClBZ,YAAY,CAAC,CAAC,CAAC;IACfI,WAAW,CAAC;MACVC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ,CAAC;EACD,MAAME,cAAc,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClB9B,OAAO,CAAC;MAAEgB;IAAK,CAAC,CAAC;IACjBC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EACD,MAAMc,YAAY,GAAG,MAAOF,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIhB,SAAS,KAAK,CAAC,EAAE;MACnBkB,QAAQ,CAAChC,OAAO,CAACkB,QAAQ,CAAC,CAAC;MAC3BS,KAAK,EAAE;IACT,CAAC,MAAM;MACLK,QAAQ,CAAC/B,WAAW,CAACa,SAAS,EAAEI,QAAQ,CAAC,CAAC;MAC1CS,KAAK,EAAE;IACT;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAK,SAAS,EAAC,6BAA6B;MAAA,uBAC1C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAyB;MAAA;MAAA;MAAA;IAAA,QACrB,eAEN;MAAM,SAAS,EAAC,WAAW;MAAC,QAAQ,EAAEC,cAAe;MAAA,wBACnD;QACE,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,IAAI;QACT,IAAI,EAAC,GAAG;QACR,WAAW,EAAC,eAAe;QAC3B,KAAK,EAAEZ,IAAK;QACZ,QAAQ,EAAGa,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAACI,MAAM,CAACC,KAAK,CAAE;QACzC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR,eAEF;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC,QAAQ;QAAC,SAAS,EAAC;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/D;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GA7DIrB,QAAQ;AAAA,KAARA,QAAQ;AA+DdA,QAAQ,CAACsB,SAAS,GAAG;EACnBnC,OAAO,EAAEF,SAAS,CAACsC,IAAI,CAACC;AAC1B,CAAC;AAED,eAAetC,OAAO,CAAC,IAAI,EAAE;EAAEC;AAAQ,CAAC,CAAC,CAACa,QAAQ,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}